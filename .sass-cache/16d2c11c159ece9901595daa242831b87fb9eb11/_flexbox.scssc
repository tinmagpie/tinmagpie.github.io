3.2.13 (Media Mark)
08aa70f143bf0c06450046332dcc74011d8172c5
o:Sass::Tree::RootNode
:@template"ß.@import "shared";

// NOTE:
// All mixins for the @box spec have been written assuming they'll be fed property values that
// correspond to the standard spec.  Some mixins can be fed values from the @box spec, but don't
// rely on it.  The `legacy-order` mixin will increment the value fed to it because the @box
// `box-ordinal-group` property begins indexing at 1, while the modern `order` property begins
// indexing at 0.

// ---------------------------------------------------------------------- | @flex

// September 2012 Candidate Recommendation (http://www.w3.org/TR/2012/CR-css3-flexbox-20120918/)
// NOTE: FF did not support wrapping until version ??.  Because the `display: flex` property
// is wrapped in a `@supports (flex-wrap: wrap)` block (when $flex-wrap-required or the $wrap
// argument to the `display-flex` mixin is set to `true`), it will Just Work(TM) when support is
// finally added
// Chrome 21 (prefixed)
// Opera 12.1 (unprefixed)
// Firefox 20 (unprefixed)
$flex-support: not -moz, -webkit, not -ms, not -o, not -khtml !default;

// if `true`, `$flex-legacy-enabled` is treated as false and an `@supports` block is added to 
// the display property to hide the standard value from versions of Firefox that support the
// unprefixed properties, but do not support wrapping
// (this includes suppressing the automatic emittion of @box properties)
$flex-wrap-required : false !default;

// ---------------------------------------------------------------------- | @flexbox

// March 2012 Working Draft (http://www.w3.org/TR/2012/WD-css3-flexbox-20120322/)
// Chrome 17 (prefixed)
// Internet Explorer 10 (prefixed)
$flexbox-support: not -moz, -webkit, -ms, not -o, not -khtml, not standard !default;

// ---------------------------------------------------------------------- | @box

// July 2009 Working Draft (http://www.w3.org/TR/2009/WD-css3-flexbox-20090723/)
// NOTE: no browser that implements this spec is known to support `box-lines: multiple`
// Chrome 4? (prefixed)
// Safari 3.1 (prefixed)
// Firefox <20 (prefixed)
$box-support: -moz, -webkit, not -ms, not -o, not -khtml, not standard !default;

// If `true`, the @box properties will be emitted as part of the normal mixin call
// (if this is false, you're still free to explicitly call the legacy mixins yourself)
$flex-legacy-enabled: false !default;

// ====================================================================================================
//                                                                       | Common
// ====================================================================================================

// function for converting a value from the standard specification to one that is comparable from
// an older specification
@function flex-translate-value($value, $version: box) {
	$value: unquote($value);

	@if $value == flex {
		@return if($version == box, box, flexbox);
	} @else if $value == inline-flex {
		@return if($version == box, inline-box, inline-flexbox);
	} @else if $value == flex-start {
		@return start;
	} @else if $value == flex-end {
		@return end;
	} @else if $value == space-between {
		@return justify;
	} @else if $value == space-around { // @box doesn't have a value equivalent to `space-around`
		@return if($version == box, justify, distribute);
	}
	@return $value;
}

@function flex-support-either() {
	$common: ();
	@for $i from 1 through length($flex-support) {
		$common: append($common, nth($flex-support, $i) or nth($flexbox-support, $i), comma);
	}
	@return $common;
}

// ====================================================================================================
//                                                                       | Display Property
// ====================================================================================================

// $type: flex | inline-flex
@mixin display-flex($type: flex, $wrap: $flex-wrap-required, $legacy: $flex-legacy-enabled) {
	@if $legacy and not $wrap {
		@include legacy-display-flex($type);
	}
	
	@include experimental-value(display, flex-translate-value($type, flexbox), $flexbox-support...);
	
	// if `$wrap` is true, then we need to suppress official support as generated by the `experimental()`
	// mixin so that we can insert it inside an `@supports` block
	$flex-support-standard: true;
	$flex-support-list: $flex-support;
	@if length($flex-support) > 5 {
		$flex-support-standard: nth($flex-support, 6);
		// a `slice()` function would really be handy here...
		$flex-support-list: nth($flex-support, 1), nth($flex-support, 2), nth($flex-support, 3), nth($flex-support, 4), nth($flex-support, 5);
	}
	$flex-support-list: append($flex-support-list, if($wrap, false, $flex-support-standard));
	@include experimental-value(display, $type, $flex-support-list...);
	
	@if $wrap and $flex-support-standard {
		@supports (flex-wrap: wrap) {
			display: $type;
		}
	}
}

@mixin legacy-display-flex($type: flex) {
	@include experimental-value(display, flex-translate-value($type, box), $box-support...);
}

// ====================================================================================================
//                                                                       | Flex Container Properties
// ====================================================================================================

// $value: <'flex-direction'> || <'flex-wrap'>
@mixin flex-flow($value: row nowrap, $wrap: $flex-wrap-required, $legacy: $flex-legacy-enabled) {
	@if $legacy and not $wrap {
		@include legacy-flex-flow($value);
	}
	
	@include experimental(flex-flow, $value, flex-support-either()...);
}

@mixin legacy-flex-flow($value: row nowrap) {
	@if length($value) > 1 { // @box version doesn't have a shorthand
		@include legacy-flex-direction(nth($value, 1));
		@include legacy-flex-wrap(nth($value, 2));
	} @else {
		$value: unquote($value);
		@if $value == row or $value == row-reverse or $value == column or $value == column-reverse {
			@include legacy-flex-direction($value);
		} @else {
			@include legacy-flex-wrap($value);
		}
	}
}

// ----------------------------------------------------------------------

// $value: row | row-reverse | column | column-reverse
@mixin flex-direction($value: row, $wrap: $flex-wrap-required, $legacy: $flex-legacy-enabled) {
	@if $legacy and not $wrap {
		@include legacy-flex-direction($value);
	}
	
	@include experimental(flex-direction, $value, flex-support-either()...);
}

@mixin legacy-flex-direction($value: row) {
	$value: unquote($value);
	@include experimental(box-orient, if($value == row or $value == row-reverse, horizontal, vertical), $box-support...);
	@include experimental(box-direction, if($value == row-reverse or $value == column-reverse, reverse, normal), $box-support...);
}

// ----------------------------------------------------------------------

// $value: nowrap | wrap | wrap-reverse
@mixin flex-wrap($value: nowrap, $wrap: $flex-wrap-required, $legacy: $flex-legacy-enabled) {
	@if $legacy and not $wrap {
		@include legacy-flex-wrap($value);
	}
	
	@include experimental(flex-wrap, $value, flex-support-either()...);
}

@mixin legacy-flex-wrap($value: nowrap) {
	// NOTE: @box has no equivalent of wrap-reverse
	@include experimental(box-lines, if($value == nowrap, single, multiple), $box-support...);
}

// ----------------------------------------------------------------------

// Distributing extra space along the "main axis"
// $value: flex-start | flex-end | center | space-between | space-around
@mixin justify-content($value: flex-start, $wrap: $flex-wrap-required, $legacy: $flex-legacy-enabled) {
	@if $legacy and not $wrap {
		@include legacy-justify-content($value);
	}
	
	@include experimental(flex-pack, flex-translate-value($value, flexbox), $flexbox-support...);
	@include experimental(justify-content, $value, $flex-support...);
}

@mixin legacy-justify-content($value: flex-start) {
	@include experimental(box-pack, flex-translate-value($value, box), $box-support...);
}

// ----------------------------------------------------------------------

// Distributing extra space along the "cross axis"
// $value: flex-start | flex-end | center | space-between | space-around | stretch
@mixin align-content($value: flex-start, $wrap: $flex-wrap-required, $legacy: $flex-legacy-enabled) {
	@if $legacy and not $wrap {
		@include legacy-align-content($value);
	}
	
	@include experimental(flex-line-pack, flex-translate-value($value, flexbox), $flexbox-support...);
	@include experimental(align-content, $value, $flex-support...);
}

@mixin legacy-align-content($value: flex-start) {
	@include experimental(box-align, flex-translate-value($value, box), $box-support...);
}

// ----------------------------------------------------------------------

// Align items along the "cross axis"
// $value: flex-start | flex-end | center | baseline | stretch
@mixin align-items($value: stretch) { // the flex container
	// There is no @box version of this property
	@include experimental(flex-align, flex-translate-value($value, flexbox), $flexbox-support...);
	@include experimental(align-items, $value, $flex-support...);
}

// ====================================================================================================
//                                                                       | Flex Item Properties
// ====================================================================================================

// $value: none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]
@mixin flex($value: 0 1 auto, $wrap: $flex-wrap-required, $legacy: $flex-legacy-enabled) {
	$value: unquote($value);
	@if $legacy and unitless(nth($value, 1)) {
		// @box version does not have a shorthand, see `legacy-flex-grow`
		@include legacy-flex-grow(nth($value, 1));
	}
	
	@include experimental(flex, $value, flex-support-either()...);
}

// ----------------------------------------------------------------------

// $value: Integer
@mixin flex-grow($value: 0, $wrap: $flex-wrap-required, $legacy: $flex-legacy-enabled) {
	@if $legacy and not $wrap {
		@include legacy-flex-grow($value);
	}
	
	// There is no @flexbox version of this property
	@include experimental(flex-grow, $value, $flex-support...);
}

@mixin legacy-flex-grow($value: 0) {
	@include experimental(box-flex, $value, $box-support...);
}

// ----------------------------------------------------------------------

// $value: Integer
@mixin flex-shrink($value: 1) {
	// There is no @box version of this property
	// There is no @flexbox version of this property
	@include experimental(flex-shrink, $value, $flex-support...);
}

// ----------------------------------------------------------------------

// $value: united number (eg: 100px)
@mixin flex-basis($value: auto) {
	// There is no @box version of this property
	// There is no @flexbox version of this property
	@include experimental(flex-basis, $value, $flex-support...);
}

// ----------------------------------------------------------------------

// Align items along the "cross axis" -- overrides `align-items` value on individual items
// $value: auto | flex-start | flex-end | center | baseline | stretch
@mixin align-self($value: auto) { // children of flex containers
	// There is no @box version of this property
	@include experimental(flex-item-align, flex-translate-value($value, flexbox), $flexbox-support...);
	@include experimental(align-self, $value, $flex-support...);
}

// ----------------------------------------------------------------------

// $value: Integer
@mixin order($value: 0, $wrap: $flex-wrap-required, $legacy: $flex-legacy-enabled) {
	@if $legacy and not $wrap {
		@include legacy-order($value);
	}
	
	@include experimental(flex-order, $value, $flexbox-support...);
	@include experimental(order, $value, $flex-support...);
}

@mixin legacy-order($value: 0) {
	// the @box spec starts the ordering at 1 instead of 0 like the modern specs
	@include experimental(box-ordinal-group, $value + 1, $box-support...);
}
:@options{ :
@linei:@has_childrenT:@children[Go:Sass::Tree::ImportNode:@imported_file0;0;@;i:@imported_filename"shared;
[ o:Sass::Tree::CommentNode
:
@type:silent;@;i:@value["/* NOTE:
 * All mixins for the @box spec have been written assuming they'll be fed property values that
 * correspond to the standard spec.  Some mixins can be fed values from the @box spec, but don't
 * rely on it.  The `legacy-order` mixin will increment the value fed to it because the @box
 * `box-ordinal-group` property begins indexing at 1, while the modern `order` property begins
 * indexing at 0. */;
[ o;
;;;@;i;["Y/* ---------------------------------------------------------------------- | @flex */;
[ o;
;;;@;i;["Þ/* September 2012 Candidate Recommendation (http://www.w3.org/TR/2012/CR-css3-flexbox-20120918/)
 * NOTE: FF did not support wrapping until version ??.  Because the `display: flex` property
 * is wrapped in a `@supports (flex-wrap: wrap)` block (when $flex-wrap-required or the $wrap
 * argument to the `display-flex` mixin is set to `true`), it will Just Work(TM) when support is
 * finally added
 * Chrome 21 (prefixed)
 * Opera 12.1 (unprefixed)
 * Firefox 20 (unprefixed) */;
[ o:Sass::Tree::VariableNode:@guarded"!default;@;i:
@expro:Sass::Script::List	;@;i;[
o:!Sass::Script::UnaryOperation	:@operator:not;@;i:@operando:Sass::Script::String	;:identifier;@;i;"	-mozo;	;;;@;i;"-webkito;	;;;@;i;o;	;;;@;i;"-mso;	;;;@;i;o;	;;;@;i;"-oo;	;;;@;i;o;	;;;@;i;"-khtml:@separator:
comma;
[ :
@name"flex-supporto;
;;;@;i;["=/* if `true`, `$flex-legacy-enabled` is treated as false and an `@supports` block is added to 
 * the display property to hide the standard value from versions of Firefox that support the
 * unprefixed properties, but do not support wrapping
 * (this includes suppressing the automatic emittion of @box properties) */;
[ o;;"!default;@;i;o:Sass::Script::Bool;@;i;F;
[ ;"flex-wrap-requiredo;
;;;@;i!;["\/* ---------------------------------------------------------------------- | @flexbox */;
[ o;
;;;@;i#;["/* March 2012 Working Draft (http://www.w3.org/TR/2012/WD-css3-flexbox-20120322/)
 * Chrome 17 (prefixed)
 * Internet Explorer 10 (prefixed) */;
[ o;;"!default;@;i&;o;	;@;i&;[o;	;;;@;i&;o;	;;;@;i&;"	-mozo;	;;;@;i&;"-webkito;	;;;@;i&;"-mso;	;;;@;i&;o;	;;;@;i&;"-oo;	;;;@;i&;o;	;;;@;i&;"-khtmlo;	;;;@;i&;o;	;;;@;i&;"standard;;;
[ ;"flexbox-supporto;
;;;@;i(;["X/* ---------------------------------------------------------------------- | @box */;
[ o;
;;;@;i*;["ö/* July 2009 Working Draft (http://www.w3.org/TR/2009/WD-css3-flexbox-20090723/)
 * NOTE: no browser that implements this spec is known to support `box-lines: multiple`
 * Chrome 4? (prefixed)
 * Safari 3.1 (prefixed)
 * Firefox <20 (prefixed) */;
[ o;;"!default;@;i/;o;	;@;i/;[o;	;;;@;i/;"	-mozo;	;;;@;i/;"-webkito;	;;;@;i/;o;	;;;@;i/;"-mso;	;;;@;i/;o;	;;;@;i/;"-oo;	;;;@;i/;o;	;;;@;i/;"-khtmlo;	;;;@;i/;o;	;;;@;i/;"standard;;;
[ ;"box-supporto;
;;;@;i1;["¬/* If `true`, the @box properties will be emitted as part of the normal mixin call
 * (if this is false, you're still free to explicitly call the legacy mixins yourself) */;
[ o;;"!default;@;i3;o;;@;i3;F;
[ ;"flex-legacy-enabledo;
;;;@;i5;["$/* ====================================================================================================
 *                                                                       | Common
 * ==================================================================================================== */;
[ o;
;;;@;i9;["~/* function for converting a value from the standard specification to one that is comparable from
 * an older specification */;
[ o:Sass::Tree::FunctionNode:
@args[[o:Sass::Script::Variable;@;"
value:@underscored_name"
value0[o;";@;"version;#"versiono;	;;;@;i;;"box;@;i;;	T;
[o;;0;@;i<;o:Sass::Script::Funcall;![o;"	;@;i<;"
value;#"
value:@keywords{ ;@;i<;"unquote:@splat0;
[ ;"
valueu:Sass::Tree::IfNodee
[o:Sass::Script::Operation
:@operator:eq:@operand2o:Sass::Script::String	:
@type:identifier:@options{ :
@linei>:@value"	flex;@;i>:@operand1o:Sass::Script::Variable	;@;i>:
@name"
value:@underscored_name"
valueu:Sass::Tree::IfNodel[o:Sass::Script::Operation
:@operator:eq:@operand2o:Sass::Script::String	:
@type:identifier:@options{ :
@linei@:@value"inline-flex;@;i@:@operand1o:Sass::Script::Variable	;@;i@:
@name"
value:@underscored_name"
valueu:Sass::Tree::IfNode^[o:Sass::Script::Operation
:@operator:eq:@operand2o:Sass::Script::String	:
@type:identifier:@options{ :
@lineiB:@value"flex-start;@;iB:@operand1o:Sass::Script::Variable	;@;iB:
@name"
value:@underscored_name"
valueu:Sass::Tree::IfNode[o:Sass::Script::Operation
:@operator:eq:@operand2o:Sass::Script::String	:
@type:identifier:@options{ :
@lineiD:@value"flex-end;@;iD:@operand1o:Sass::Script::Variable	;@;iD:
@name"
value:@underscored_name"
valueu:Sass::Tree::IfNode¼[o:Sass::Script::Operation
:@operator:eq:@operand2o:Sass::Script::String	:
@type:identifier:@options{ :
@lineiF:@value"space-between;@;iF:@operand1o:Sass::Script::Variable	;@;iF:
@name"
value:@underscored_name"
valueu:Sass::Tree::IfNoded[o:Sass::Script::Operation
:@operator:eq:@operand2o:Sass::Script::String	:
@type:identifier:@options{ :
@lineiH:@value"space-around;@;iH:@operand1o:Sass::Script::Variable	;@;iH:
@name"
value:@underscored_name"
value0[o:Sass::Tree::CommentNode
;
:silent;@;iH;["A/* @box doesn't have a value equivalent to `space-around` */:@children[ o:Sass::Tree::ReturnNode	;@;iI:
@expro:Sass::Script::Funcall:
@args[o; 
;;;o;		;
;;@;iI;"box;@;iI;o;	;@;iI;"version;"versiono;		;
;;@;iI;"justifyo;		;
;;@;iI;"distribute:@keywords{ ;@;iI;"if:@splat0;[ [o:Sass::Tree::ReturnNode	;@;iG:
@expro;		;
;;@;iG;"justify:@children[ [o:Sass::Tree::ReturnNode	;@;iE:
@expro;		;
;;@;iE;"end:@children[ [o:Sass::Tree::ReturnNode	;@;iC:
@expro;		;
;;@;iC;"
start:@children[ [o:Sass::Tree::ReturnNode	;@;iA:
@expro:Sass::Script::Funcall:
@args[o; 
;;;o;		;
;;@;iA;"box;@;iA;o;	;@;iA;"version;"versiono;		;
;;@;iA;"inline-boxo;		;
;;@;iA;"inline-flexbox:@keywords{ ;@;iA;"if:@splat0:@children[ [o:Sass::Tree::ReturnNode	;@;i?:
@expro:Sass::Script::Funcall:
@args[o; 
;;;o;		;
;;@;i?;"box;@;i?;o;	;@;i?;"version;"versiono;		;
;;@;i?;"boxo;		;
;;@;i?;"flexbox:@keywords{ ;@;i?;"if:@splat0:@children[ o:Sass::Tree::ReturnNode	;@;iK;o;"	;@;iK;"
value;#"
value;
[ ;"flex-translate-value;&0o; ;![ ;@;iN;	T;
[o;;0;@;iO;o;	;@;iO;[ ;:
space;
[ ;"commono:Sass::Tree::ForNode:@too;$;![o;"	;@;iP;"flex-support;#"flex_support;%{ ;@;iP;"length;&0:@exclusiveF;@;iP:
@fromo:Sass::Script::Number:@numerator_units[ :@original"1;@;iP;i:@denominator_units[ ;	T;
[o;;0;@;iQ;o;$;![o;"	;@;iQ;"common;#"commono:Sass::Script::Operation
;:or:@operand2o;$;![o;"	;@;iQ;"flexbox-support;#"flexbox_supporto;"	;@;iQ;"i;#"i;%{ ;@;iQ;"nth;&0;@;iQ:@operand1o;$;![o;"	;@;iQ;"flex-support;#"flex_supporto;"	;@;iQ;"i;#"i;%{ ;@;iQ;"nth;&0o;	;;;@;iQ;"
comma;%{ ;@;iQ;"append;&0;
[ ;"common:	@var"io;(	;@;iS;o;"	;@;iS;"common;#"common;
[ ;"flex-support-either;&0o;
;;;@;iV;["./* ====================================================================================================
 *                                                                       | Display Property
 * ==================================================================================================== */;
[ o;
;;;@;iZ;["$/* $type: flex | inline-flex */;
[ o:Sass::Tree::MixinDefNode;![[o;";@;"	type;#"	typeo;	;;;@;i[;"	flex[o;";@;"	wrap;#"	wrapo;"	;@;i[;"flex-wrap-required;#"flex_wrap_required[o;";@;"legacy;#"legacyo;"	;@;i[;"flex-legacy-enabled;#"flex_legacy_enabled;@;i[;	T;
[u;'~[o:Sass::Script::Operation
:@operator:and:@operand2o:!Sass::Script::UnaryOperation	;:not:@options{ :
@linei\:@operando:Sass::Script::Variable	;@;i\:
@name"	wrap:@underscored_name"	wrap;@;i\:@operand1o;	;@;i\;"legacy;"legacy0[o:Sass::Tree::MixinNode:
@args[o;	;@;i];"	type;"	type:@keywords{ ;@;i]:@children[ ;"legacy-display-flex:@splat0o:Sass::Tree::MixinNode;![o;	;;;@;i`;"displayo;$;![o;"	;@;i`;"	type;#"	typeo;	;;;@;i`;"flexbox;%{ ;@;i`;"flex-translate-value;&0;%{ ;@;i`;
[ ;"experimental-value;&o;"	;{ ;i`;"flexbox-support;#"flexbox_supporto;
;;;@;ib;["¦/* if `$wrap` is true, then we need to suppress official support as generated by the `experimental()`
 * mixin so that we can insert it inside an `@supports` block */;
[ o;;0;@;id;o;;@;id;T;
[ ;"flex-support-standardo;;0;@;ie;o;"	;@;ie;"flex-support;#"flex_support;
[ ;"flex-support-listu;'ù[o:Sass::Script::Operation
:@operator:gt:@operand2o:Sass::Script::Number:@numerator_units[ :@original"5:@options{ :
@lineif:@valuei
:@denominator_units[ ;@
;if:@operand1o:Sass::Script::Funcall:
@args[o:Sass::Script::Variable	;@
;if:
@name"flex-support:@underscored_name"flex_support:@keywords{ ;@
;if;"length:@splat00[o:Sass::Tree::VariableNode:@guarded0;@
;ig:
@expro;;[o;	;@
;ig;"flex-support;"flex_supporto;	;
[ ;"6;@
;ig;i;@;{ ;@
;ig;"nth;0:@children[ ;"flex-support-standardo:Sass::Tree::CommentNode
:
@type:silent;@
;ih;["=/* a `slice()` function would really be handy here... */;[ o;;0;@
;ii;o:Sass::Script::List	;@
;ii;[
o;;[o;	;@
;ii;"flex-support;"flex_supporto;	;
[ ;"1;@
;ii;i;@;{ ;@
;ii;"nth;0o;;[o;	;@
;ii;"flex-support;"flex_supporto;	;
[ ;"2;@
;ii;i;@;{ ;@
;ii;"nth;0o;;[o;	;@
;ii;"flex-support;"flex_supporto;	;
[ ;"3;@
;ii;i;@;{ ;@
;ii;"nth;0o;;[o;	;@
;ii;"flex-support;"flex_supporto;	;
[ ;"4;@
;ii;i	;@;{ ;@
;ii;"nth;0o;;[o;	;@
;ii;"flex-support;"flex_supporto;	;
[ ;"5;@
;ii;i
;@;{ ;@
;ii;"nth;0:@separator:
comma;[ ;"flex-support-listo;;0;@;ik;o;$;![o;"	;@;ik;"flex-support-list;#"flex_support_listo;$;![o;"	;@;ik;"	wrap;#"	wrapo;;@;ik;Fo;"	;@;ik;"flex-support-standard;#"flex_support_standard;%{ ;@;ik;"if;&0;%{ ;@;ik;"append;&0;
[ ;"flex-support-listo;8;![o;	;;;@;il;"displayo;"	;@;il;"	type;#"	type;%{ ;@;il;
[ ;"experimental-value;&o;"	;{ ;il;"flex-support-list;#"flex_support_listu;'0[o:Sass::Script::Operation
:@operator:and:@operand2o:Sass::Script::Variable	:@options{ :
@linein:
@name"flex-support-standard:@underscored_name"flex_support_standard;
@;in:@operand1o;		;
@;in;"	wrap;"	wrap0[o:Sass::Tree::SupportsNode;
@;io:@value" :@conditiono: Sass::Supports::Declaration;o:Sass::Script::String	:
@type:identifier;
@;io;"	wrap;o;	;;;
@;io;"flex-wrap:@has_childrenT:@children[o:Sass::Tree::PropNode:@prop_syntax:new;
@;ip;o;		;
@;ip;"	type;"	type;[ ;["display:
@tabsi ;"supports;i ;"display-flex;&0o;7;![[o;";@;"	type;#"	typeo;	;;;@;iu;"	flex;@;iu;	T;
[o;8;![o;	;;;@;iv;"displayo;$;![o;"	;@;iv;"	type;#"	typeo;	;;;@;iv;"box;%{ ;@;iv;"flex-translate-value;&0;%{ ;@;iv;
[ ;"experimental-value;&o;"	;{ ;iv;"box-support;#"box_support;"legacy-display-flex;&0o;
;;;@;iy;["7/* ====================================================================================================
 *                                                                       | Flex Container Properties
 * ==================================================================================================== */;
[ o;
;;;@;i};["6/* $value: <'flex-direction'> || <'flex-wrap'> */;
[ o;7;![[o;";@;"
value;#"
valueo;	;@;i~;[o;	;;;@;i~;"rowo;	;;;@;i~;"nowrap;;)[o;";@;"	wrap;#"	wrapo;"	;@;i~;"flex-wrap-required;#"flex_wrap_required[o;";@;"legacy;#"legacyo;"	;@;i~;"flex-legacy-enabled;#"flex_legacy_enabled;@;i~;	T;
[u;'[o:Sass::Script::Operation
:@operator:and:@operand2o:!Sass::Script::UnaryOperation	;:not:@options{ :
@linei:@operando:Sass::Script::Variable	;@;i:
@name"	wrap:@underscored_name"	wrap;@;i:@operand1o;	;@;i;"legacy;"legacy0[o:Sass::Tree::MixinNode:
@args[o;	;@;i{;"
value;"
value:@keywords{ ;@;i{:@children[ ;"legacy-flex-flow:@splat0o;8;![o;	;;;@;i~;"flex-flowo;"	;@;i~;"
value;#"
value;%{ ;@;i~;
[ ;"experimental;&o;$;![ ;%{ ;{ ;i~;"flex-support-either;&0;"flex-flow;&0o;7;![[o;";@;"
value;#"
valueo;	;@;i;[o;	;;;@;i;"rowo;	;;;@;i;"nowrap;;);@;i;	T;
[u;'£[o:Sass::Script::Operation
:@operator:gt:@operand2o:Sass::Script::Number:@numerator_units[ :@original"1:@options{ :
@linei:@valuei:@denominator_units[ ;@
;i:@operand1o:Sass::Script::Funcall:
@args[o:Sass::Script::Variable	;@
;i:
@name"
value:@underscored_name"
value:@keywords{ ;@
;i;"length:@splat0u:Sass::Tree::IfNode[00[o:Sass::Tree::VariableNode:@guarded0:@options{ :
@linei:
@expro:Sass::Script::Funcall:
@args[o:Sass::Script::Variable	;@;i:
@name"
value:@underscored_name"
value:@keywords{ ;@;i;"unquote:@splat0:@children[ ;"
valueu:Sass::Tree::IfNode[o:Sass::Script::Operation
:@operator:or:@operand2o; 
;:eq;o:Sass::Script::String	:
@type:identifier:@options{ :
@linei:@value"column-reverse;@	;i:@operand1o:Sass::Script::Variable	;@	;i:
@name"
value:@underscored_name"
value;@	;i;o; 
;;;o; 
;;	;o;
	;;;@	;i;"column;@	;i;o;	;@	;i;"
value;"
value;@	;i;o; 
;;;o; 
;;	;o;
	;;;@	;i;"row-reverse;@	;i;o;	;@	;i;"
value;"
value;@	;i;o; 
;;	;o;
	;;;@	;i;"row;@	;i;o;	;@	;i;"
value;"
valueu:Sass::Tree::IfNodeÂ[00[o:Sass::Tree::MixinNode:
@args[o:Sass::Script::Variable	:@options{ :
@linei:
@name"
value:@underscored_name"
value:@keywords{ ;@
;	i:@children[ ;
"legacy-flex-wrap:@splat0[o:Sass::Tree::MixinNode:
@args[o;	;@	;i;"
value;"
value:@keywords{ ;@	;i:@children[ ;"legacy-flex-direction:@splat0[o:Sass::Tree::CommentNode
:
@type:silent;@
;i;["0/* @box version doesn't have a shorthand */:@children[ o:Sass::Tree::MixinNode;[o;;[o;	;@
;i;"
value;"
valueo;	;
[ ;"1;@
;i;i;@;{ ;@
;i;"nth;0;{ ;@
;i;[ ;"legacy-flex-direction;0o;;[o;;[o;	;@
;i;"
value;"
valueo;	;
[ ;"2;@
;i;i;@;{ ;@
;i;"nth;0;{ ;@
;i;[ ;"legacy-flex-wrap;0;"legacy-flex-flow;&0o;
;;;@;i;["Q/* ---------------------------------------------------------------------- */;
[ o;
;;;@;i;[">/* $value: row | row-reverse | column | column-reverse */;
[ o;7;![[o;";@;"
value;#"
valueo;	;;;@;i;"row[o;";@;"	wrap;#"	wrapo;"	;@;i;"flex-wrap-required;#"flex_wrap_required[o;";@;"legacy;#"legacyo;"	;@;i;"flex-legacy-enabled;#"flex_legacy_enabled;@;i;	T;
[u;'[o:Sass::Script::Operation
:@operator:and:@operand2o:!Sass::Script::UnaryOperation	;:not:@options{ :
@linei:@operando:Sass::Script::Variable	;@;i:
@name"	wrap:@underscored_name"	wrap;@;i:@operand1o;	;@;i;"legacy;"legacy0[o:Sass::Tree::MixinNode:
@args[o;	;@;i;"
value;"
value:@keywords{ ;@;i:@children[ ;"legacy-flex-direction:@splat0o;8;![o;	;;;@;i;"flex-directiono;"	;@;i;"
value;#"
value;%{ ;@;i;
[ ;"experimental;&o;$;![ ;%{ ;{ ;i;"flex-support-either;&0;"flex-direction;&0o;7;![[o;";@;"
value;#"
valueo;	;;;@;i;"row;@;i;	T;
[o;;0;@;i;o;$;![o;"	;@;i;"
value;#"
value;%{ ;@;i;"unquote;&0;
[ ;"
valueo;8;![o;	;;;@;i;"box-oriento;$;![o;2
;;3;4o;2
;:eq;4o;	;;;@;i;"row-reverse;@;i;5o;"	;@;i;"
value;#"
value;@;i;5o;2
;;9;4o;	;;;@;i;"row;@;i;5o;"	;@;i;"
value;#"
valueo;	;;;@;i;"horizontalo;	;;;@;i;"vertical;%{ ;@;i;"if;&0;%{ ;@;i;
[ ;"experimental;&o;"	;{ ;i;"box-support;#"box_supporto;8;![o;	;;;@;i;"box-directiono;$;![o;2
;;3;4o;2
;;9;4o;	;;;@;i;"column-reverse;@;i;5o;"	;@;i;"
value;#"
value;@;i;5o;2
;;9;4o;	;;;@;i;"row-reverse;@;i;5o;"	;@;i;"
value;#"
valueo;	;;;@;i;"reverseo;	;;;@;i;"normal;%{ ;@;i;"if;&0;%{ ;@;i;
[ ;"experimental;&o;"	;{ ;i;"box-support;#"box_support;"legacy-flex-direction;&0o;
;;;@;i ;["Q/* ---------------------------------------------------------------------- */;
[ o;
;;;@;i¢;["//* $value: nowrap | wrap | wrap-reverse */;
[ o;7;![[o;";@;"
value;#"
valueo;	;;;@;i£;"nowrap[o;";@;"	wrap;#"	wrapo;"	;@;i£;"flex-wrap-required;#"flex_wrap_required[o;";@;"legacy;#"legacyo;"	;@;i£;"flex-legacy-enabled;#"flex_legacy_enabled;@;i£;	T;
[u;'[o:Sass::Script::Operation
:@operator:and:@operand2o:!Sass::Script::UnaryOperation	;:not:@options{ :
@linei¤:@operando:Sass::Script::Variable	;@;i¤:
@name"	wrap:@underscored_name"	wrap;@;i¤:@operand1o;	;@;i¤;"legacy;"legacy0[o:Sass::Tree::MixinNode:
@args[o;	;@;i¥;"
value;"
value:@keywords{ ;@;i¥:@children[ ;"legacy-flex-wrap:@splat0o;8;![o;	;;;@;i¨;"flex-wrapo;"	;@;i¨;"
value;#"
value;%{ ;@;i¨;
[ ;"experimental;&o;$;![ ;%{ ;{ ;i¨;"flex-support-either;&0;"flex-wrap;&0o;7;![[o;";@;"
value;#"
valueo;	;;;@;i«;"nowrap;@;i«;	T;
[o;
;;;@;i¬;["7/* NOTE: @box has no equivalent of wrap-reverse */;
[ o;8;![o;	;;;@;i­;"box-lineso;$;![o;2
;;9;4o;	;;;@;i­;"nowrap;@;i­;5o;"	;@;i­;"
value;#"
valueo;	;;;@;i­;"singleo;	;;;@;i­;"multiple;%{ ;@;i­;"if;&0;%{ ;@;i­;
[ ;"experimental;&o;"	;{ ;i­;"box-support;#"box_support;"legacy-flex-wrap;&0o;
;;;@;i°;["Q/* ---------------------------------------------------------------------- */;
[ o;
;;;@;i²;["}/* Distributing extra space along the "main axis"
 * $value: flex-start | flex-end | center | space-between | space-around */;
[ o;7;![[o;";@;"
value;#"
valueo;	;;;@;i´;"flex-start[o;";@;"	wrap;#"	wrapo;"	;@;i´;"flex-wrap-required;#"flex_wrap_required[o;";@;"legacy;#"legacyo;"	;@;i´;"flex-legacy-enabled;#"flex_legacy_enabled;@;i´;	T;
[u;'[o:Sass::Script::Operation
:@operator:and:@operand2o:!Sass::Script::UnaryOperation	;:not:@options{ :
@lineiµ:@operando:Sass::Script::Variable	;@;iµ:
@name"	wrap:@underscored_name"	wrap;@;iµ:@operand1o;	;@;iµ;"legacy;"legacy0[o:Sass::Tree::MixinNode:
@args[o;	;@;i¶;"
value;"
value:@keywords{ ;@;i¶:@children[ ;"legacy-justify-content:@splat0o;8;![o;	;;;@;i¹;"flex-packo;$;![o;"	;@;i¹;"
value;#"
valueo;	;;;@;i¹;"flexbox;%{ ;@;i¹;"flex-translate-value;&0;%{ ;@;i¹;
[ ;"experimental;&o;"	;{ ;i¹;"flexbox-support;#"flexbox_supporto;8;![o;	;;;@;iº;"justify-contento;"	;@;iº;"
value;#"
value;%{ ;@;iº;
[ ;"experimental;&o;"	;{ ;iº;"flex-support;#"flex_support;"justify-content;&0o;7;![[o;";@;"
value;#"
valueo;	;;;@;i½;"flex-start;@;i½;	T;
[o;8;![o;	;;;@;i¾;"box-packo;$;![o;"	;@;i¾;"
value;#"
valueo;	;;;@;i¾;"box;%{ ;@;i¾;"flex-translate-value;&0;%{ ;@;i¾;
[ ;"experimental;&o;"	;{ ;i¾;"box-support;#"box_support;"legacy-justify-content;&0o;
;;;@;iÁ;["Q/* ---------------------------------------------------------------------- */;
[ o;
;;;@;iÃ;["/* Distributing extra space along the "cross axis"
 * $value: flex-start | flex-end | center | space-between | space-around | stretch */;
[ o;7;![[o;";@;"
value;#"
valueo;	;;;@;iÅ;"flex-start[o;";@;"	wrap;#"	wrapo;"	;@;iÅ;"flex-wrap-required;#"flex_wrap_required[o;";@;"legacy;#"legacyo;"	;@;iÅ;"flex-legacy-enabled;#"flex_legacy_enabled;@;iÅ;	T;
[u;'[o:Sass::Script::Operation
:@operator:and:@operand2o:!Sass::Script::UnaryOperation	;:not:@options{ :
@lineiÆ:@operando:Sass::Script::Variable	;@;iÆ:
@name"	wrap:@underscored_name"	wrap;@;iÆ:@operand1o;	;@;iÆ;"legacy;"legacy0[o:Sass::Tree::MixinNode:
@args[o;	;@;iÇ;"
value;"
value:@keywords{ ;@;iÇ:@children[ ;"legacy-align-content:@splat0o;8;![o;	;;;@;iÊ;"flex-line-packo;$;![o;"	;@;iÊ;"
value;#"
valueo;	;;;@;iÊ;"flexbox;%{ ;@;iÊ;"flex-translate-value;&0;%{ ;@;iÊ;
[ ;"experimental;&o;"	;{ ;iÊ;"flexbox-support;#"flexbox_supporto;8;![o;	;;;@;iË;"align-contento;"	;@;iË;"
value;#"
value;%{ ;@;iË;
[ ;"experimental;&o;"	;{ ;iË;"flex-support;#"flex_support;"align-content;&0o;7;![[o;";@;"
value;#"
valueo;	;;;@;iÎ;"flex-start;@;iÎ;	T;
[o;8;![o;	;;;@;iÏ;"box-aligno;$;![o;"	;@;iÏ;"
value;#"
valueo;	;;;@;iÏ;"box;%{ ;@;iÏ;"flex-translate-value;&0;%{ ;@;iÏ;
[ ;"experimental;&o;"	;{ ;iÏ;"box-support;#"box_support;"legacy-align-content;&0o;
;;;@;iÒ;["Q/* ---------------------------------------------------------------------- */;
[ o;
;;;@;iÔ;["l/* Align items along the "cross axis"
 * $value: flex-start | flex-end | center | baseline | stretch */;
[ o;7;![[o;";@;"
value;#"
valueo;	;;;@;iÖ;"stretch;@;iÖ;	T;
[o;
;;;@;iÖ;["J/* the flex container
 * There is no @box version of this property */;
[ o;8;![o;	;;;@;iØ;"flex-aligno;$;![o;"	;@;iØ;"
value;#"
valueo;	;;;@;iØ;"flexbox;%{ ;@;iØ;"flex-translate-value;&0;%{ ;@;iØ;
[ ;"experimental;&o;"	;{ ;iØ;"flexbox-support;#"flexbox_supporto;8;![o;	;;;@;iÙ;"align-itemso;"	;@;iÙ;"
value;#"
value;%{ ;@;iÙ;
[ ;"experimental;&o;"	;{ ;iÙ;"flex-support;#"flex_support;"align-items;&0o;
;;;@;iÜ;["2/* ====================================================================================================
 *                                                                       | Flex Item Properties
 * ==================================================================================================== */;
[ o;
;;;@;ià;["N/* $value: none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ] */;
[ o;7;![[o;";@;"
value;#"
valueo;	;@;iá;[o;.;/[ ;0"0;@;iá;i ;1@®o;.;/[ ;0"1;@;iá;i;1@®o;	;;;@;iá;"	auto;;)[o;";@;"	wrap;#"	wrapo;"	;@;iá;"flex-wrap-required;#"flex_wrap_required[o;";@;"legacy;#"legacyo;"	;@;iá;"flex-legacy-enabled;#"flex_legacy_enabled;@;iá;	T;
[o;;0;@;iâ;o;$;![o;"	;@;iâ;"
value;#"
value;%{ ;@;iâ;"unquote;&0;
[ ;"
valueu;'Ä[o:Sass::Script::Operation
:@operator:and:@operand2o:Sass::Script::Funcall:
@args[o;	;
[o:Sass::Script::Variable	:@options{ :
@lineiã:
@name"
value:@underscored_name"
valueo:Sass::Script::Number:@numerator_units[ :@original"1;@;iã:@valuei:@denominator_units[ :@keywords{ ;@;iã;"nth:@splat0;{ ;@;iã;"unitless;0;@;iã:@operand1o;	;@;iã;"legacy;"legacy0[o:Sass::Tree::CommentNode
:
@type:silent;@;iä;["I/* @box version does not have a shorthand, see `legacy-flex-grow` */:@children[ o:Sass::Tree::MixinNode;
[o;	;
[o;	;@;iå;"
value;"
valueo;;[ ;"1;@;iå;i;@;{ ;@;iå;"nth;0;{ ;@;iå;[ ;"legacy-flex-grow;0o;8;![o;	;;;@;iè;"	flexo;"	;@;iè;"
value;#"
value;%{ ;@;iè;
[ ;"experimental;&o;$;![ ;%{ ;{ ;iè;"flex-support-either;&0;"	flex;&0o;
;;;@;ië;["Q/* ---------------------------------------------------------------------- */;
[ o;
;;;@;ií;["/* $value: Integer */;
[ o;7;![[o;";@;"
value;#"
valueo;.;/[ ;0"0;@;iî;i ;1@®[o;";@;"	wrap;#"	wrapo;"	;@;iî;"flex-wrap-required;#"flex_wrap_required[o;";@;"legacy;#"legacyo;"	;@;iî;"flex-legacy-enabled;#"flex_legacy_enabled;@;iî;	T;
[u;'[o:Sass::Script::Operation
:@operator:and:@operand2o:!Sass::Script::UnaryOperation	;:not:@options{ :
@lineiï:@operando:Sass::Script::Variable	;@;iï:
@name"	wrap:@underscored_name"	wrap;@;iï:@operand1o;	;@;iï;"legacy;"legacy0[o:Sass::Tree::MixinNode:
@args[o;	;@;ið;"
value;"
value:@keywords{ ;@;ið:@children[ ;"legacy-flex-grow:@splat0o;
;;;@;ió;["8/* There is no @flexbox version of this property */;
[ o;8;![o;	;;;@;iô;"flex-growo;"	;@;iô;"
value;#"
value;%{ ;@;iô;
[ ;"experimental;&o;"	;{ ;iô;"flex-support;#"flex_support;"flex-grow;&0o;7;![[o;";@;"
value;#"
valueo;.;/[ ;0"0;@;i÷;i ;1@®;@;i÷;	T;
[o;8;![o;	;;;@;iø;"box-flexo;"	;@;iø;"
value;#"
value;%{ ;@;iø;
[ ;"experimental;&o;"	;{ ;iø;"box-support;#"box_support;"legacy-flex-grow;&0o;
;;;@;iû;["Q/* ---------------------------------------------------------------------- */;
[ o;
;;;@;iý;["/* $value: Integer */;
[ o;7;![[o;";@;"
value;#"
valueo;.;/[ ;0"1;@;iþ;i;1@®;@;iþ;	T;
[o;
;;;@;iÿ;["e/* There is no @box version of this property
 * There is no @flexbox version of this property */;
[ o;8;![o;	;;;@;i;"flex-shrinko;"	;@;i;"
value;#"
value;%{ ;@;i;
[ ;"experimental;&o;"	;{ ;i;"flex-support;#"flex_support;"flex-shrink;&0o;
;;;@;i;["Q/* ---------------------------------------------------------------------- */;
[ o;
;;;@;i;[",/* $value: united number (eg: 100px) */;
[ o;7;![[o;";@;"
value;#"
valueo;	;;;@;i;"	auto;@;i;	T;
[o;
;;;@;i;["e/* There is no @box version of this property
 * There is no @flexbox version of this property */;
[ o;8;![o;	;;;@;i
;"flex-basiso;"	;@;i
;"
value;#"
value;%{ ;@;i
;
[ ;"experimental;&o;"	;{ ;i
;"flex-support;#"flex_support;"flex-basis;&0o;
;;;@;i;["Q/* ---------------------------------------------------------------------- */;
[ o;
;;;@;i;["£/* Align items along the "cross axis" -- overrides `align-items` value on individual items
 * $value: auto | flex-start | flex-end | center | baseline | stretch */;
[ o;7;![[o;";@;"
value;#"
valueo;	;;;@;i;"	auto;@;i;	T;
[o;
;;;@;i;["S/* children of flex containers
 * There is no @box version of this property */;
[ o;8;![o;	;;;@;i;"flex-item-aligno;$;![o;"	;@;i;"
value;#"
valueo;	;;;@;i;"flexbox;%{ ;@;i;"flex-translate-value;&0;%{ ;@;i;
[ ;"experimental;&o;"	;{ ;i;"flexbox-support;#"flexbox_supporto;8;![o;	;;;@;i;"align-selfo;"	;@;i;"
value;#"
value;%{ ;@;i;
[ ;"experimental;&o;"	;{ ;i;"flex-support;#"flex_support;"align-self;&0o;
;;;@;i;["Q/* ---------------------------------------------------------------------- */;
[ o;
;;;@;i;["/* $value: Integer */;
[ o;7;![[o;";@;"
value;#"
valueo;.;/[ ;0"0;@;i;i ;1@®[o;";@;"	wrap;#"	wrapo;"	;@;i;"flex-wrap-required;#"flex_wrap_required[o;";@;"legacy;#"legacyo;"	;@;i;"flex-legacy-enabled;#"flex_legacy_enabled;@;i;	T;
[u;'[o:Sass::Script::Operation
:@operator:and:@operand2o:!Sass::Script::UnaryOperation	;:not:@options{ :
@linei:@operando:Sass::Script::Variable	;@;i:
@name"	wrap:@underscored_name"	wrap;@;i:@operand1o;	;@;i;"legacy;"legacy0[o:Sass::Tree::MixinNode:
@args[o;	;@;i;"
value;"
value:@keywords{ ;@;i:@children[ ;"legacy-order:@splat0o;8;![o;	;;;@;i;"flex-ordero;"	;@;i;"
value;#"
value;%{ ;@;i;
[ ;"experimental;&o;"	;{ ;i;"flexbox-support;#"flexbox_supporto;8;![o;	;;;@;i ;"
ordero;"	;@;i ;"
value;#"
value;%{ ;@;i ;
[ ;"experimental;&o;"	;{ ;i ;"flex-support;#"flex_support;"
order;&0o;7;![[o;";@;"
value;#"
valueo;.;/[ ;0"0;@;i#;i ;1@®;@;i#;	T;
[o;
;;;@;i$;["T/* the @box spec starts the ordering at 1 instead of 0 like the modern specs */;
[ o;8;![o;	;;;@;i%;"box-ordinal-groupo;2
;:	plus;4o;.;/[ ;0"1;@;i%;i;1@®;@;i%;5o;"	;@;i%;"
value;#"
value;%{ ;@;i%;
[ ;"experimental;&o;"	;{ ;i%;"box-support;#"box_support;"legacy-order;&0